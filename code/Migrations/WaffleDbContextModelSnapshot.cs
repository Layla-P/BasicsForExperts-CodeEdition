// <auto-generated />
using BasicsForExperts.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BasicsForExperts.Web.Migrations
{
    [DbContext(typeof(WaffleDbContext))]
    partial class WaffleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BasicsForExperts.Web.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Price = 15m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Price = 17m,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("BasicsForExperts.Web.Entities.OrderTopping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal");

                    b.Property<int>("WaffleId")
                        .HasColumnType("int");

                    b.Property<string>("WaffleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("WaffleId");

                    b.ToTable("OrderTopping");
                });

            modelBuilder.Entity("BasicsForExperts.Web.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Test@test.com",
                            Name = "Jakub",
                            PhoneNumber = "01234564565"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Test2@test.com",
                            Name = "Layla",
                            PhoneNumber = "012345256465"
                        });
                });

            modelBuilder.Entity("BasicsForExperts.Web.Entities.Waffle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Base")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Waffles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Base = "round",
                            OrderId = 1
                        },
                        new
                        {
                            Id = 2,
                            Base = "square",
                            OrderId = 2
                        },
                        new
                        {
                            Id = 3,
                            Base = "square",
                            OrderId = 2
                        });
                });

            modelBuilder.Entity("BasicsForExperts.Web.Entities.Order", b =>
                {
                    b.HasOne("BasicsForExperts.Web.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BasicsForExperts.Web.Entities.OrderTopping", b =>
                {
                    b.HasOne("BasicsForExperts.Web.Entities.Waffle", "Waffle")
                        .WithMany("OrderToppings")
                        .HasForeignKey("WaffleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Waffle");
                });

            modelBuilder.Entity("BasicsForExperts.Web.Entities.Waffle", b =>
                {
                    b.HasOne("BasicsForExperts.Web.Entities.Order", "Order")
                        .WithMany("Waffles")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BasicsForExperts.Web.Entities.Order", b =>
                {
                    b.Navigation("Waffles");
                });

            modelBuilder.Entity("BasicsForExperts.Web.Entities.User", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BasicsForExperts.Web.Entities.Waffle", b =>
                {
                    b.Navigation("OrderToppings");
                });
#pragma warning restore 612, 618
        }
    }
}
